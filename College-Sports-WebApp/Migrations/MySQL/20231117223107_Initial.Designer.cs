// <auto-generated />
using System;
using College_Sports_WebApp.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace College_Sports_WebApp.Migrations.MySQL
{
    [DbContext(typeof(MySQLDbContext))]
    [Migration("20231117223107_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ScoreboardCallouts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("GamecastLink")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ScoreboardCallouts");
                });

            modelBuilder.Entity("ScoreboardEventInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("LocationDetail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LocationHeadline")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ScoreboardEventInfo");
                });

            modelBuilder.Entity("ScoreboardItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CalloutsId")
                        .HasColumnType("int");

                    b.Property<int>("EventInfoId")
                        .HasColumnType("int");

                    b.Property<int>("ScoreCellId")
                        .HasColumnType("int");

                    b.Property<int?>("ScoreboardResultId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CalloutsId");

                    b.HasIndex("EventInfoId");

                    b.HasIndex("ScoreCellId");

                    b.HasIndex("ScoreboardResultId");

                    b.ToTable("ScoreboardItem");
                });

            modelBuilder.Entity("ScoreboardResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FetchDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateOnly>("FilterDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("ScoreboardResults");
                });

            modelBuilder.Entity("ScoreboardScoreCell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ScoreboardScoreCell");
                });

            modelBuilder.Entity("ScoreboardScoreCellItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsAway")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RecordId")
                        .HasColumnType("int");

                    b.Property<int?>("ScoreboardScoreCellId")
                        .HasColumnType("int");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RecordId");

                    b.HasIndex("ScoreboardScoreCellId");

                    b.ToTable("ScoreboardScoreCellItem");
                });

            modelBuilder.Entity("ScoreboardScoreCellItemRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ScoreboardScoreCellItemRecord");
                });

            modelBuilder.Entity("ScoreboardItem", b =>
                {
                    b.HasOne("ScoreboardCallouts", "Callouts")
                        .WithMany()
                        .HasForeignKey("CalloutsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScoreboardEventInfo", "EventInfo")
                        .WithMany()
                        .HasForeignKey("EventInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScoreboardScoreCell", "ScoreCell")
                        .WithMany()
                        .HasForeignKey("ScoreCellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScoreboardResult", null)
                        .WithMany("ScoreboardItems")
                        .HasForeignKey("ScoreboardResultId");

                    b.Navigation("Callouts");

                    b.Navigation("EventInfo");

                    b.Navigation("ScoreCell");
                });

            modelBuilder.Entity("ScoreboardScoreCellItem", b =>
                {
                    b.HasOne("ScoreboardScoreCellItemRecord", "Record")
                        .WithMany()
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScoreboardScoreCell", null)
                        .WithMany("Competitors")
                        .HasForeignKey("ScoreboardScoreCellId");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("ScoreboardResult", b =>
                {
                    b.Navigation("ScoreboardItems");
                });

            modelBuilder.Entity("ScoreboardScoreCell", b =>
                {
                    b.Navigation("Competitors");
                });
#pragma warning restore 612, 618
        }
    }
}
