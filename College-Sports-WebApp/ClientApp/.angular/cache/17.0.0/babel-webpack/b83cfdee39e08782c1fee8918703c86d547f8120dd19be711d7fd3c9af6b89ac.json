{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { BaseService } from '../base-service';\nimport { apiSportsDataApiScoresByDateGet$Json } from '../fn/sports-data-api/api-sports-data-api-scores-by-date-get-json';\nimport { apiSportsDataApiScoresByDateGet$Plain } from '../fn/sports-data-api/api-sports-data-api-scores-by-date-get-plain';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api-configuration\";\nimport * as i2 from \"@angular/common/http\";\nexport class SportsDataApiService extends BaseService {\n  constructor(config, http) {\n    super(config, http);\n  }\n  /** Path part for operation `apiSportsDataApiScoresByDateGet()` */\n  static #_ = this.ApiSportsDataApiScoresByDateGetPath = '/api/SportsDataApi/scores-by-date';\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `apiSportsDataApiScoresByDateGet$Plain()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  apiSportsDataApiScoresByDateGet$Plain$Response(params, context) {\n    return apiSportsDataApiScoresByDateGet$Plain(this.http, this.rootUrl, params, context);\n  }\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `apiSportsDataApiScoresByDateGet$Plain$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  apiSportsDataApiScoresByDateGet$Plain(params, context) {\n    return this.apiSportsDataApiScoresByDateGet$Plain$Response(params, context).pipe(map(r => r.body));\n  }\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `apiSportsDataApiScoresByDateGet$Json()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  apiSportsDataApiScoresByDateGet$Json$Response(params, context) {\n    return apiSportsDataApiScoresByDateGet$Json(this.http, this.rootUrl, params, context);\n  }\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `apiSportsDataApiScoresByDateGet$Json$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  apiSportsDataApiScoresByDateGet$Json(params, context) {\n    return this.apiSportsDataApiScoresByDateGet$Json$Response(params, context).pipe(map(r => r.body));\n  }\n  static #_2 = this.ɵfac = function SportsDataApiService_Factory(t) {\n    return new (t || SportsDataApiService)(i0.ɵɵinject(i1.ApiConfiguration), i0.ɵɵinject(i2.HttpClient));\n  };\n  static #_3 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SportsDataApiService,\n    factory: SportsDataApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","BaseService","apiSportsDataApiScoresByDateGet$Json","apiSportsDataApiScoresByDateGet$Plain","SportsDataApiService","constructor","config","http","_","ApiSportsDataApiScoresByDateGetPath","apiSportsDataApiScoresByDateGet$Plain$Response","params","context","rootUrl","pipe","r","body","apiSportsDataApiScoresByDateGet$Json$Response","_2","i0","ɵɵinject","i1","ApiConfiguration","i2","HttpClient","_3","factory","ɵfac","providedIn"],"sources":["/Users/danevanderbilt/Projects/College-Sports-WebApp/ClientApp/src/api/services/sports-data-api.service.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\nimport { HttpClient, HttpContext } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\n\nimport { apiSportsDataApiScoresByDateGet$Json } from '../fn/sports-data-api/api-sports-data-api-scores-by-date-get-json';\nimport { ApiSportsDataApiScoresByDateGet$Json$Params } from '../fn/sports-data-api/api-sports-data-api-scores-by-date-get-json';\nimport { apiSportsDataApiScoresByDateGet$Plain } from '../fn/sports-data-api/api-sports-data-api-scores-by-date-get-plain';\nimport { ApiSportsDataApiScoresByDateGet$Plain$Params } from '../fn/sports-data-api/api-sports-data-api-scores-by-date-get-plain';\nimport { ScoreBasic } from '../models/score-basic';\n\n@Injectable({ providedIn: 'root' })\nexport class SportsDataApiService extends BaseService {\n  constructor(config: ApiConfiguration, http: HttpClient) {\n    super(config, http);\n  }\n\n  /** Path part for operation `apiSportsDataApiScoresByDateGet()` */\n  static readonly ApiSportsDataApiScoresByDateGetPath = '/api/SportsDataApi/scores-by-date';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `apiSportsDataApiScoresByDateGet$Plain()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  apiSportsDataApiScoresByDateGet$Plain$Response(params?: ApiSportsDataApiScoresByDateGet$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<ScoreBasic>>> {\n    return apiSportsDataApiScoresByDateGet$Plain(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `apiSportsDataApiScoresByDateGet$Plain$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  apiSportsDataApiScoresByDateGet$Plain(params?: ApiSportsDataApiScoresByDateGet$Plain$Params, context?: HttpContext): Observable<Array<ScoreBasic>> {\n    return this.apiSportsDataApiScoresByDateGet$Plain$Response(params, context).pipe(\n      map((r: StrictHttpResponse<Array<ScoreBasic>>): Array<ScoreBasic> => r.body)\n    );\n  }\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `apiSportsDataApiScoresByDateGet$Json()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  apiSportsDataApiScoresByDateGet$Json$Response(params?: ApiSportsDataApiScoresByDateGet$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<ScoreBasic>>> {\n    return apiSportsDataApiScoresByDateGet$Json(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `apiSportsDataApiScoresByDateGet$Json$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  apiSportsDataApiScoresByDateGet$Json(params?: ApiSportsDataApiScoresByDateGet$Json$Params, context?: HttpContext): Observable<Array<ScoreBasic>> {\n    return this.apiSportsDataApiScoresByDateGet$Json$Response(params, context).pipe(\n      map((r: StrictHttpResponse<Array<ScoreBasic>>): Array<ScoreBasic> => r.body)\n    );\n  }\n\n}\n"],"mappings":"AAKA,SAASA,GAAG,QAAQ,gBAAgB;AAEpC,SAASC,WAAW,QAAQ,iBAAiB;AAI7C,SAASC,oCAAoC,QAAQ,mEAAmE;AAExH,SAASC,qCAAqC,QAAQ,oEAAoE;;;;AAK1H,OAAM,MAAOC,oBAAqB,SAAQH,WAAW;EACnDI,YAAYC,MAAwB,EAAEC,IAAgB;IACpD,KAAK,CAACD,MAAM,EAAEC,IAAI,CAAC;EACrB;EAEA;EAAA,QAAAC,CAAA,GACgB,KAAAC,mCAAmC,GAAG,mCAAmC;EAEzF;;;;;;EAMAC,8CAA8CA,CAACC,MAAqD,EAAEC,OAAqB;IACzH,OAAOT,qCAAqC,CAAC,IAAI,CAACI,IAAI,EAAE,IAAI,CAACM,OAAO,EAAEF,MAAM,EAAEC,OAAO,CAAC;EACxF;EAEA;;;;;;EAMAT,qCAAqCA,CAACQ,MAAqD,EAAEC,OAAqB;IAChH,OAAO,IAAI,CAACF,8CAA8C,CAACC,MAAM,EAAEC,OAAO,CAAC,CAACE,IAAI,CAC9Ed,GAAG,CAAEe,CAAwC,IAAwBA,CAAC,CAACC,IAAI,CAAC,CAC7E;EACH;EAEA;;;;;;EAMAC,6CAA6CA,CAACN,MAAoD,EAAEC,OAAqB;IACvH,OAAOV,oCAAoC,CAAC,IAAI,CAACK,IAAI,EAAE,IAAI,CAACM,OAAO,EAAEF,MAAM,EAAEC,OAAO,CAAC;EACvF;EAEA;;;;;;EAMAV,oCAAoCA,CAACS,MAAoD,EAAEC,OAAqB;IAC9G,OAAO,IAAI,CAACK,6CAA6C,CAACN,MAAM,EAAEC,OAAO,CAAC,CAACE,IAAI,CAC7Ed,GAAG,CAAEe,CAAwC,IAAwBA,CAAC,CAACC,IAAI,CAAC,CAC7E;EACH;EAAC,QAAAE,EAAA,G;qBAlDUd,oBAAoB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,gBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAApBrB,oBAAoB;IAAAsB,OAAA,EAApBtB,oBAAoB,CAAAuB,IAAA;IAAAC,UAAA,EADP;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}